<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:p="http://www.springframework.org/schema/p"
             xmlns:mvc="http://www.springframework.org/schema/mvc"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:security="http://www.springframework.org/schema/security"
             xmlns:util="http://www.springframework.org/schema/util"
             xmlns:aop="http://www.springframework.org/schema/aop"
             xsi:schemaLocation="http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/util 
        http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security.xsd">
        
	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven validator="validator" />

	<!-- Enable controller method level security <security:global-method-security 
		pre-post-annotations="enabled"/> -->

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources location="/, classpath:/META-INF/web-resources/"
		mapping="/resources/**" />

	<!-- Allows for mapping the DispatcherServlet to "/" by forwarding static 
		resource requests to the container's default Servlet -->
	<default-servlet-handler />

	<context:component-scan base-package="com.congruent.compulaw.web.mvc" />

	<!-- Resolves JSPpages -->
	<!-- <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"> 
		<beans:property name="prefix" value="/WEB-INF/views/" /> <beans:property 
		name="suffix" value=".jsp" /> </beans:bean> -->

	<!-- register "global" interceptor beans to apply to all registered HandlerMappings -->
	<interceptors>
		<beans:bean
			class="org.springframework.web.servlet.theme.ThemeChangeInterceptor" />
		<beans:bean
			class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"
			p:paramName="lang" />
	</interceptors>

	<!-- Resolves localized messages*.properties and application.properties 
		files in the application to allow for internationalization. The messages*.properties 
		files translate messages, the application.properties resource bundle localizes 
		all application specific messages such as entity names and menu items. -->

	<beans:bean
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource"
		id="messageSource" p:basenames="WEB-INF/i18n/messages,WEB-INF/i18n/application"
		p:fallbackToSystemLocale="false" />

	<!-- store preferred language configuration in a cookie -->
	<beans:bean class="org.springframework.web.servlet.i18n.CookieLocaleResolver"
		id="localeResolver" p:cookieName="locale" />

	<!-- resolves localized <theme_name>.properties files in the classpath to allow for theme support -->
	<beans:bean class="org.springframework.ui.context.support.ResourceBundleThemeSource" id="themeSource" />

	<!-- store preferred theme configuration in a cookie -->
	<beans:bean class="org.springframework.web.servlet.theme.CookieThemeResolver"
		id="themeResolver" p:cookieName="theme" p:defaultThemeName="standard" />
  
	<!-- Tiles Configuration -->
	<beans:bean class="org.springframework.web.servlet.view.UrlBasedViewResolver" id="tilesViewResolver">
		<beans:property name="viewClass"
			value="org.springframework.web.servlet.view.tiles2.TilesView" /> 
	</beans:bean>

	<beans:bean
		class="org.springframework.web.servlet.view.tiles2.TilesConfigurer"
		id="tilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/layouts/layouts.xml</beans:value>
				<beans:value>/WEB-INF/views/**/views.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>

	<!-- JSR303 Domain Validation -->
	<beans:bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<beans:property name="validationMessageSource" ref="messageSource" />
	</beans:bean>

	<!-- Enable file upload functionality -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.support.StandardServletMultipartResolver">
	</beans:bean>

	<!-- Configure Email support -->
	<beans:bean id="mailSender"
		class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<beans:property name="host" value="${smtp.hostname}" />
		<beans:property name="port" value="${smtp.port}" />
		<beans:property name="username" value="${smtp.username}" />
		<beans:property name="password" value="${smtp.password}" />
		 <beans:property name="javaMailProperties">
            <beans:props>
                <beans:prop key="mail.transport.protocol">smtp</beans:prop>
                <beans:prop key="mail.smtp.auth">true</beans:prop>
                <beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
                <beans:prop key="mail.debug">true</beans:prop>
            </beans:props>
        </beans:property>
	</beans:bean>


	<!-- Custom Property Editor Config -->
	<beans:bean id="customEditorConfigurer" 
			class="org.springframework.beans.factory.config.CustomEditorConfigurer"
							p:propertyEditorRegistrars-ref="propertyEditorRegistrarsList"/>
							
	<util:list id="propertyEditorRegistrarsList">
		<beans:bean class="com.congruent.compulaw.web.editor.DateTimeEditorRegistrar">
			<beans:constructor-arg value="${date_format_pattern}"/>
		</beans:bean>
	</util:list>
	<!-- <beans:bean
		class="org.springframework.beans.factory.config.CustomEditorConfigurer">
		<beans:property name="customEditors">
			<beans:map>
				<beans:entry key="org.joda.time.DateTime">
					<beans:bean class="com.congruent.compulaw.web.editor.DateTimeEditor" />
				</beans:entry>
				<beans:entry key="com.congruent.compulaw.domain.Subscription">
					<beans:bean
						class="com.congruent.compulaw.web.editor.SubscriptionTypeEditor" />
				</beans:entry>
				<beans:entry key="com.congruent.compulaw.domain.User">
					<beans:bean class="com.congruent.compulaw.web.editor.UserTypeEditor" />
				</beans:entry>

				<beans:entry key="com.congruent.compulaw.domain.LawSubCategory">
					<beans:bean
						class="com.congruent.compulaw.web.editor.LawSubCategoryEditor" />
				</beans:entry>
				<beans:entry key="com.congruent.compulaw.domain.Document">
					<beans:bean class="com.congruent.compulaw.web.editor.DocumentEditor" />
				</beans:entry>  
				<beans:entry key="com.congruent.compulaw.domain.Transaction">
					<beans:bean class="com.congruent.compulaw.web.editor.TransactionEditor" />
				</beans:entry>
				<beans:entry
					key="com.congruent.compulaw.domain.Transaction.UserSubscriptionId">
					<beans:bean
						class="com.congruent.compulaw.web.editor.UserSubscriptionIdEditor" />
				</beans:entry>
				<beans:entry key="com.congruent.compulaw.domain.LawCategory">
					<beans:bean class="com.congruent.compulaw.web.editor.LawCategoryEditor" />
				</beans:entry>
			</beans:map>
		</beans:property>
	</beans:bean> -->
	
	<!-- Converters -->
	<beans:bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean">
		<beans:property name="converters">
			<beans:list>
				<beans:bean class="com.congruent.compulaw.web.converter.StringToDateTimeConverter"/>
				<beans:bean class="com.congruent.compulaw.web.converter.StringToLawCategoryConverter"/>
				<beans:bean class="com.congruent.compulaw.web.converter.StringToSubscriptionConverter"/>
				<beans:bean class="com.congruent.compulaw.web.converter.StringToUserConverter"/>
				<beans:bean class="com.congruent.compulaw.web.converter.LongToLawCategory"/>
				<beans:bean class="com.congruent.compulaw.web.converter.LongToSubscriptionConverter"/>
				<beans:bean class="com.congruent.compulaw.web.converter.LongToUserConverter"/>				
			</beans:list>
		</beans:property>
	</beans:bean>

	<!-- Map Exceptions -->
	<!-- <beans:bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver"> 
		<property name="exceptionMappings"> <props> <prop key=".DataAccessException">dataAccessFailure</prop> 
		<prop key=".lang.Exception">uncaughtException</prop> <prop key=".AuthenticationCredentialsNotFoundException">login</prop> 
		<prop key=".AccessDeniedException">login</prop> </props> </property> </beans:bean> -->
	<beans:bean id="velocityEngine"
		class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
		<beans:property name="velocityProperties">
			<beans:value>
				resource.loader=class
				class.resource.loader.class=org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
			</beans:value>
		</beans:property>
	</beans:bean>
	
	
</beans:beans>